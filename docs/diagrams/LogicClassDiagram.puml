@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

    package Parser {
        Interface Parser <<Interface>>
        Class FitBizParser
        Class XYZCommandParser
        Class CliSyntax
        Class ParserUtil
        Class ArgumentMultimap
        Class ArgumentTokenizer
        Class Prefix
    }

    package Command {
        Class XYZCommand
        Class CommandResult
        Class "{abstract}\nCommand" as Command
    }

    package Autocomplete {
        Class Autocomplete
    }

    package CommandHistory {
        Class CommandHistory
    }

    Interface Logic <<Interface>>
    Class LogicManager
}

package Model{
    Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -->"1" FitBizParser
LogicManager -left->"1" Autocomplete
LogicManager -left->"1" CommandHistory
FitBizParser .left.> XYZCommandParser: creates >

XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
ArgumentTokenizer .left.> ArgumentMultimap
XYZCommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil .down.> Prefix
ArgumentTokenizer .down.> Prefix
XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
Command .right.> Model
note left of XYZCommandParser: XYZCommandParser refers to all the parsers in FitBiZ
note right of XYZCommand: XYZCommand refers to all the commands available in FitBiZ

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> Parser
@enduml
