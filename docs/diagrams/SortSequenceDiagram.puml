@startuml
!include style.puml

box Sort LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TaskListParser" as TaskListParser LOGIC_COLOR
participant "s:SortCommand" as SortCommand LOGIC_COLOR
participant "result:SortCommandResult" as SortCommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "tl:TaskList" as TaskList MODEL_COLOR
end box

[-> LogicManager : execute("sort priority name")
activate LogicManager

ref over LogicManager, TaskListParser
Parse input to keep unique keywords
end ref

create SortCommand
LogicManager -> SortCommand: SortCommand({"priority", "name"})
activate SortCommand

SortCommand -> LogicManager:
deactivate SortCommand

LogicManager -[hidden]-> SortCommand :
LogicManager -> SortCommand : execute()
activate SortCommand

loop [int 1..n]
    SortCommand -> SortCommand: get{Field}Comparator()
    activate SortCommand

    SortCommand -> SortCommand: Add FieldComparator \n to aggregateComp
    deactivate SortCommand
    SortCommand -[hidden]> SortCommand
end

SortCommand -> Model : setComparator(aggregateComp)
activate Model

Model -> Model: sortList()
activate Model

Model -> TaskList: sort(aggregateComp)
activate TaskList
TaskList -> Model
deactivate TaskList

Model <- Model
deactivate Model

Model -> SortCommand
deactivate Model
Model -[hidden]> SortCommand

create SortCommandResult
SortCommand -> SortCommandResult
activate SortCommandResult

SortCommandResult --> SortCommand
deactivate SortCommandResult

SortCommand --> LogicManager : result
deactivate SortCommand

[<--LogicManager
deactivate LogicManager
@enduml
