@startuml
!include style.puml
skinparam ParticipantFontSize 40

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ModManagerParser" as ModManagerParser LOGIC_COLOR
participant ":TaskCommandParser" as TaskCommandParser LOGIC_COLOR
participant "list:TaskListUnDoneCommand" as TaskListUnDoneCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

[-> LogicManager : execute("task \n undone")
activate LogicManager

LogicManager -> ModManagerParser : parseCommand("task \n undone")
activate ModManagerParser

create TaskCommandParser
ModManagerParser -> TaskCommandParser
activate TaskCommandParser

TaskCommandParser --> ModManagerParser
deactivate TaskCommandParser

ModManagerParser -> TaskCommandParser : parse("undone")
activate TaskCommandParser

create TaskListUnDoneCommand
TaskCommandParser -> TaskListUnDoneCommand
activate TaskListUnDoneCommand

TaskListUnDoneCommand --> TaskCommandParser : list
deactivate TaskListUnDoneCommand

TaskCommandParser --> ModManagerParser : list
deactivate TaskCommandParser
TaskCommandParser -[hidden]-> ModManagerParser
destroy TaskCommandParser

ModManagerParser --> LogicManager : list
deactivate ModManagerParser

LogicManager -> TaskListUnDoneCommand : execute()
activate TaskListUnDoneCommand

TaskListUnDoneCommand -> ModelManager : updateFilteredTaskList(\npredicateIsTaskNotDone())
activate ModelManager

ModelManager --> TaskListUnDoneCommand
deactivate ModelManager

create CommandResult
TaskListUnDoneCommand -> CommandResult
activate CommandResult

CommandResult --> TaskListUnDoneCommand
deactivate CommandResult

TaskListUnDoneCommand --> LogicManager : result
deactivate TaskListUnDoneCommand
TaskListUnDoneCommand -[hidden]-> LogicManager
destroy TaskListUnDoneCommand

[<--LogicManager
deactivate LogicManager
@enduml
