@startuml
/' @author @WillySeahh'/
/' Got inspiration and adapted
from https://github.com/AY1920S2-CS2103T-W12-1/main/blob/master/docs/images/DeliveredClassDiagram.png '/

skinparam backgroundColor #ffffff
skinparam classAttributeIconSize 0
hide circle


abstract class Command <E>{
    {abstract} execute(model:E) : CommandResult
}

class ListAmountCommand extends Command {
    /' Fields '/

    /' Methods '/
    + execute(splitterModel : SplitterModel) : CommandResult

}

interface SplitterModel <<Interface>> {
    + addEntry(entry : Entry) : void
    + deleteEntry(index : int) : void
    + getEntry(entry : Entry) : Entry
    + paidPerson(person : Person, amountPaid : String) : void
    + listAmount() : String
    + listReceipt() : String
    + getReceipt() : Receipt
    + clearReceipt() : void
    + hasPerson(person : Person) : boolean
    + addPerson(person : Person) : void
    + getPerson(person : Person) : Person
    + addAmount(person : Person, amount : Amount) : void
    + removeAmount(person : Person, amount : Amount) : void
    + isReceiptDone() : boolean
    + getReceiptBook() : ReadOnlyReceiptBook

}

class SplitterModelManager implements SplitterModel {
    /' Fields '/
    - personAmountBook : PersonAmountBook

    /' Methods '/
    + listAmount() : String
}

class PersonAmountBook {
    /' Fields '/
    - persons : UniquePersonList

    /' Methods '/
    + toString() : String
}




ListAmountCommand ..> SplitterModel
SplitterModelManager *-right->"1" PersonAmountBook


@enduml
