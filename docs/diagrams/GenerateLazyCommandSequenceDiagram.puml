@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":RemovalBasedCommand" as RemovalBasedCommand LOGIC_COLOR
'participant "u:UnarchiveCommand" as UnarchiveCommand LOGIC_COLOR
'participant "a:ArchiveCommand" as ArchiveCommand LOGIC_COLOR
'participant "d:DeleteCommand" as DeleteCommand LOGIC_COLOR
end box

group LOGIC_COLOR_T1 sd generation of lazy removal-based command

    activate RemovalBasedCommand
       '        add spacing
       RemovalBasedCommand -[hidden]-> RemovalBasedCommand
'        alt #white delete
'            RemovalBasedCommand -> RemovalBasedCommand : generateLazyCommand()
'            activate RemovalBasedCommand
'            RemovalBasedCommand --> RemovalBasedCommand : lazy function to construct DeleteCommand
'            deactivate RemovalBasedCommand
'        else archive
            RemovalBasedCommand -> RemovalBasedCommand : generateLazyCommand()
            activate RemovalBasedCommand
            RemovalBasedCommand --> RemovalBasedCommand : lazy function to construct ArchiveCommand
            deactivate RemovalBasedCommand
'        else unarchive
'            RemovalBasedCommand -> RemovalBasedCommand : generateLazyCommand()
'            activate RemovalBasedCommand
'            RemovalBasedCommand --> RemovalBasedCommand : lazy function to construct UnarchiveCommand
'            deactivate RemovalBasedCommand
'        else exception
'        'how to represent this?'
'        end

    '        add spacing
    RemovalBasedCommand -[hidden]-> RemovalBasedCommand

'    activate RemovalBasedCommand
'        alt #white delete
'            RemovalBasedCommand -> RemovalBasedCommand : generateLazyCommand()
'            activate RemovalBasedCommand
'            create DeleteCommand
'            RemovalBasedCommand -> DeleteCommand : DeleteCommand(index)
'                activate DeleteCommand
'                DeleteCommand --> RemovalBasedCommand : d
'                deactivate DeleteCommand
'            RemovalBasedCommand --> RemovalBasedCommand : (Index index) -> d
'            deactivate RemovalBasedCommand
'        else archive
'            RemovalBasedCommand -> RemovalBasedCommand : generateLazyCommand()
'            activate RemovalBasedCommand
'            create ArchiveCommand
'            RemovalBasedCommand -> ArchiveCommand : ArchiveCommand(index)
'                activate ArchiveCommand
'                ArchiveCommand --> RemovalBasedCommand : a
'                deactivate ArchiveCommand
'            RemovalBasedCommand --> RemovalBasedCommand : a
'            deactivate RemovalBasedCommand
'        else unarchive
'            RemovalBasedCommand -> RemovalBasedCommand : generateLazyCommand()
'            activate RemovalBasedCommand
'            create UnarchiveCommand
'            RemovalBasedCommand -> UnarchiveCommand : UnarchiveCommand(index)
'                activate UnarchiveCommand
'                UnarchiveCommand --> RemovalBasedCommand : u
'                deactivate UnarchiveCommand
'            RemovalBasedCommand --> RemovalBasedCommand : u
'            deactivate RemovalBasedCommand
'        end
'    deactivate RemovalBasedCommand

end group ref

@enduml
