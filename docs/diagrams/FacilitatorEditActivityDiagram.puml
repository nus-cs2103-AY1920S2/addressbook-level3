@startuml
start
:User executes facilitator edit command;
if () then ([index or name is provided])
    if () then ([index is provided])
        :Parser parses index;
        if () then ([index is valid])
            :Parser parses fields to edit;
            if () then ([arguments are valid])
                :Logic executes command;
                if () then ([index is not out of bounds])
                    :Command creates edited facilitator;
                    if () then ([ModManager does not contain edited facilitator])
                        :Model edits facilitator in UniqueFacilitatorList
                                             in ModManager;
                        :Logic saves ModManager to Storage;
                        :Ui shows the updated facilitator list;
                    else ([else])
                        :Ui shows error message;
                    endif
                else ([else])
                    :Ui shows error message;
                endif
            else ([else])
                :Ui shows error message;
            endif
        else ([else])
            :Ui shows error message;
        endif
    else ([name is provided])
        :Parser parses name;
        if () then ([name is valid])
            :Parser parses fields to edit;
            if () then ([arguments are valid])
                :Logic executes command;
                if () then ([facilitator exists in ModManager])
                    :Command creates edited facilitator;
                    if () then ([ModManager does not contain edited facilitator])
                        :Model edits facilitator in UniqueFacilitatorList
                                             in ModManager;
                        :Logic saves ModManager to Storage;
                        :Ui shows the updated facilitator list;
                    else ([else])
                        :Ui shows error message;
                    endif
                else ([else])
                    :Ui shows error message;
                endif
            else ([else])
                :Ui shows error message;
            endif
        else ([else])
            :Ui shows error message;
        endif
    endif
else ([else])
    :Ui shows error message;
endif
stop
@enduml
